//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseOperation
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InstituteEntities : DbContext
    {
        public InstituteEntities()
            : base("name=InstituteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<sp_fetch_student_Result> sp_fetch_student(Nullable<int> stud_id)
        {
            var stud_idParameter = stud_id.HasValue ?
                new ObjectParameter("stud_id", stud_id) :
                new ObjectParameter("stud_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_fetch_student_Result>("sp_fetch_student", stud_idParameter);
        }
    
        public virtual ObjectResult<sp_fetch_subject_Result> sp_fetch_subject(Nullable<int> sub_id)
        {
            var sub_idParameter = sub_id.HasValue ?
                new ObjectParameter("sub_id", sub_id) :
                new ObjectParameter("sub_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_fetch_subject_Result>("sp_fetch_subject", sub_idParameter);
        }
    
        public virtual ObjectResult<sp_fetch_subtech_Result> sp_fetch_subtech(Nullable<int> subtech_id)
        {
            var subtech_idParameter = subtech_id.HasValue ?
                new ObjectParameter("subtech_id", subtech_id) :
                new ObjectParameter("subtech_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_fetch_subtech_Result>("sp_fetch_subtech", subtech_idParameter);
        }
    
        public virtual ObjectResult<sp_fetch_teacher_Result> sp_fetch_teacher(Nullable<int> tech_id)
        {
            var tech_idParameter = tech_id.HasValue ?
                new ObjectParameter("tech_id", tech_id) :
                new ObjectParameter("tech_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_fetch_teacher_Result>("sp_fetch_teacher", tech_idParameter);
        }
    
        public virtual int sp_student(string type, Nullable<int> stud_id, string stud_name, string stud_email, string stud_address, string stud_mobilenumber)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var stud_idParameter = stud_id.HasValue ?
                new ObjectParameter("stud_id", stud_id) :
                new ObjectParameter("stud_id", typeof(int));
    
            var stud_nameParameter = stud_name != null ?
                new ObjectParameter("stud_name", stud_name) :
                new ObjectParameter("stud_name", typeof(string));
    
            var stud_emailParameter = stud_email != null ?
                new ObjectParameter("stud_email", stud_email) :
                new ObjectParameter("stud_email", typeof(string));
    
            var stud_addressParameter = stud_address != null ?
                new ObjectParameter("stud_address", stud_address) :
                new ObjectParameter("stud_address", typeof(string));
    
            var stud_mobilenumberParameter = stud_mobilenumber != null ?
                new ObjectParameter("stud_mobilenumber", stud_mobilenumber) :
                new ObjectParameter("stud_mobilenumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_student", typeParameter, stud_idParameter, stud_nameParameter, stud_emailParameter, stud_addressParameter, stud_mobilenumberParameter);
        }
    
        public virtual int sp_subject(string type, Nullable<int> sub_id, string sub_name)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var sub_idParameter = sub_id.HasValue ?
                new ObjectParameter("sub_id", sub_id) :
                new ObjectParameter("sub_id", typeof(int));
    
            var sub_nameParameter = sub_name != null ?
                new ObjectParameter("sub_name", sub_name) :
                new ObjectParameter("sub_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_subject", typeParameter, sub_idParameter, sub_nameParameter);
        }
    
        public virtual int sp_subtech(string type, Nullable<int> subtech_id, Nullable<int> sub_id, Nullable<int> tech_id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var subtech_idParameter = subtech_id.HasValue ?
                new ObjectParameter("subtech_id", subtech_id) :
                new ObjectParameter("subtech_id", typeof(int));
    
            var sub_idParameter = sub_id.HasValue ?
                new ObjectParameter("sub_id", sub_id) :
                new ObjectParameter("sub_id", typeof(int));
    
            var tech_idParameter = tech_id.HasValue ?
                new ObjectParameter("tech_id", tech_id) :
                new ObjectParameter("tech_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_subtech", typeParameter, subtech_idParameter, sub_idParameter, tech_idParameter);
        }
    
        public virtual int sp_teacher(string type, Nullable<int> teacher_id, string teacher_name, string teacher_email, string teacher_address, string teacher_mobilenumber, Nullable<int> subject_id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var teacher_idParameter = teacher_id.HasValue ?
                new ObjectParameter("teacher_id", teacher_id) :
                new ObjectParameter("teacher_id", typeof(int));
    
            var teacher_nameParameter = teacher_name != null ?
                new ObjectParameter("teacher_name", teacher_name) :
                new ObjectParameter("teacher_name", typeof(string));
    
            var teacher_emailParameter = teacher_email != null ?
                new ObjectParameter("teacher_email", teacher_email) :
                new ObjectParameter("teacher_email", typeof(string));
    
            var teacher_addressParameter = teacher_address != null ?
                new ObjectParameter("teacher_address", teacher_address) :
                new ObjectParameter("teacher_address", typeof(string));
    
            var teacher_mobilenumberParameter = teacher_mobilenumber != null ?
                new ObjectParameter("teacher_mobilenumber", teacher_mobilenumber) :
                new ObjectParameter("teacher_mobilenumber", typeof(string));
    
            var subject_idParameter = subject_id.HasValue ?
                new ObjectParameter("subject_id", subject_id) :
                new ObjectParameter("subject_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_teacher", typeParameter, teacher_idParameter, teacher_nameParameter, teacher_emailParameter, teacher_addressParameter, teacher_mobilenumberParameter, subject_idParameter);
        }
    }
}
